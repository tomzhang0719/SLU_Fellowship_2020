df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = rel(2)) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 4 +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 4) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 5) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions, fill = source)) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions, fill = "mediumseagreen")) +
geom_col(width = 0.1) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, fill = "mediumseagreen") +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1 aes(fill = source)) +
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
#aspect.ratio = 1,
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
legend = element_blank()
line = element_blank(),
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
legend = element_blank(),
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "paired")
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "Paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "Paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "Paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
df1 <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
df1 %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "Paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
library(tidyverse)
df_Barplot <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df1$source <- fct_inorder(df1$source)
library(tidyverse)
df_Barplot <- tibble(
predictions = c(4000, 5000),
source = factor(c("Before Upgrade", "After Upgrade"))
)
df_Barplot$source <- fct_inorder(df_Barplot$source)
df_Barplot %>%
ggplot(., aes(x = source, y = predictions)) +
geom_col(width = 0.1, aes(fill = source)) +
geom_label(aes(label = predictions), size = 6) +
theme_minimal() +
scale_fill_brewer(palette = "Paired") +
theme(
legend.position = "none",
line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(
color = "black",
size = rel(1.5),
vjust = 3
),
plot.background = element_rect(fill = rgb(1,1,1,1))
)
q()
q()
q()
q()
shiny::runApp('*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
countyData = read.table(
text = "State County
Delaware Kent
Delaware 'New Castle'
Delaware Sussex
'Rhode Island' Bristol
'Rhode Island' Kent
'Rhode Island' Newport
'Rhode Island' Providence
'Rhode Island' Washington",
header = TRUE, stringsAsFactors = FALSE)
countyData
View(countyData)
unique(countyData$State)
countyData$State
runApp('*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
runApp('*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
data_available
runApp('*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
runApp('*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
setwd("~/*R/SLU_Fellowship_2020/Shiny/Shiny_Mod1_Dashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
runApp('~/*R/SLU_Fellowship_2020/Shiny/Reactive_Select_Input_Boxes')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste("x", "y")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
